[startup]
init-timeout = 15


[brain]
sleep-time = 00:00
wakeup-time = 06:00


[trigger:control-rotary]
plugin = hal9000.brain.plugins.mqtt
mqtt-topic = "hal9000/event/frontend/device/event"
mqtt-payload-jsonpath = '$[?(device.type=="rotary" & device.name=="control")].event.delta'
signal-json-formatter = '{"enclosure": {"control": {"delta": "%(jsonpath)s"}}}'

[trigger:control-button]
plugin = hal9000.brain.plugins.mqtt
mqtt-topic = "hal9000/event/frontend/device/event"
mqtt-payload-jsonpath = '$[?(device.type=="button" & device.name=="control")].event.status'
signal-json-formatter = '{"enclosure": {"control": {"select": "%(jsonpath)s"}}}'

[trigger:volume-rotary]
plugin = hal9000.brain.plugins.mqtt
mqtt-topic = "hal9000/event/frontend/device/event"
mqtt-payload-jsonpath = '$[?(device.type=="rotary" & device.name=="volume")].event.delta'
signal-json-formatter = '{"enclosure": {"volume": {"delta": "%(jsonpath)s"}}}'

[trigger:volume-button]
plugin = hal9000.brain.plugins.mqtt
mqtt-topic = "hal9000/event/frontend/device/event"
mqtt-payload-jsonpath = '$[?(device.type=="button" & device.name=="volume")].event.status'
signal-json-formatter = '{"enclosure": {"volume": {"mute": "%(jsonpath)s"}}}'

[trigger:frontend-status]
plugin = hal9000.brain.plugins.mqtt
mqtt-topic = "hal9000/event/frontend/status"
mqtt-payload-regex = "(?P<status>\w+)"
signal-json-formatter = '{"frontend": {"status": "%(status)s"}}'

[trigger:frontend-gui]
plugin = hal9000.brain.plugins.mqtt
mqtt-topic = "hal9000/event/frontend/gui/event"
mqtt-payload-jsonpath = '$[?(screen)].screen'
signal-json-formatter = '{"frontend": {"gui": {"screen": {"name": "%(jsonpath)s", "parameter": {}}}}}'

[trigger:frontend-error]
plugin = hal9000.brain.plugins.mqtt
mqtt-topic = "hal9000/event/frontend/application/error"
mqtt-payload-regex = "(?P<error>.+)"
signal-json-formatter = '{"frontend": %(error)s}'

[trigger:kalliope-status]
plugin = hal9000.brain.plugins.mqtt
mqtt-topic = "hal9000/event/kalliope/status"
mqtt-payload-regex = "(?P<status>\w+)"
signal-json-formatter = '{"kalliope": {"status": "%(status)s"}}'

[trigger:brain-script]
plugin = hal9000.brain.plugins.mqtt
mqtt-topic = "hal9000/command/brain/script"
mqtt-payload-jsonpath = '$[?(name)].name'
signal-json-formatter = '{"brain": {"script": "%(jsonpath)s"}}'


[action:enclosure]
plugin = hal9000.brain.plugins.enclosure

[action:frontend]
plugin = hal9000.brain.plugins.frontend

[action:kalliope]
plugin = hal9000.brain.plugins.kalliope
kalliope-trigger-mqtt-topic = kalliope/trigger/multiplexer/event

[action:mqtt]
plugin = hal9000.brain.plugins.mqtt


[enclosure:components]
control = hal9000.brain.plugins.enclosure.control.Control
volume = hal9000.brain.plugins.enclosure.volume.Volume

[enclosure:control]
item-files = brain.d/control/menu/main.ini
menu-files = brain.d/control/menu/en/main.ini

[enclosure:volume]
initial-volume = 50
initial-mute = False
volume-step = 5


[script:reboot]
exec = ./scripts/reboot.py

[script:poweroff]
exec = ./scripts/poweroff.py


[help]
error-url = "https://github.com/juergenpabel/HAL9000-demo-en_US/wiki/ERROR_{code}"


[mqtt]
server = 127.0.0.1
port = 1883


[loggers]
keys = root

[handlers]
keys=stdout

[formatters]
keys=stdout

[logger_root]
level=INFO
handlers=stdout

[handler_stdout]
class=StreamHandler
formatter=stdout
args=(sys.stdout,)

[formatter_stdout]
format=%(asctime)s - %(levelname)-8s - %(message)s
datefmt=

